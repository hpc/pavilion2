?expression: comp_expression
        |    binary_expression
        |    unary_expression
        |    keyword

?comp_expression: lval comparator rval

?binary_expression: expression binary_connective expression

?unary_expression: unary_connective expression

arbitrary_string: /.+/

keyword: "COMPLETE"i -> complete
    |    "ALL_STARTED"i -> all_started
    |    "PASSED"i -> passed
    |    "FAILED"i -> failed
    |    "RESULT_ERROR"i -> result_error

lval: CNAME

?rval: num_value | arbitrary_string

?num_value: time | INT

binary_connective: WS -> f_and
                |  "|" -> f_or

unary_connective: "!" -> f_not

comparator: "<" -> lt
          | ">" -> gt
          | "<=" -> lte
          | ">=" -> gte
          | "=" -> eq
          | "!=" -> neq

?time: partial_iso
    | duration

duration: INT [WS] unit ["s"]

partial_iso: partial_iso_date ("T" partial_iso_time)?

partial_iso_date: _iso_year [(("-" _iso_month) [("-" _iso_day)])]

partial_iso_time: _iso_hour [((":" _iso_minutes) [(":" _iso_seconds)])]

_iso_year: /\d{4}/

_iso_month: /\d{2}/

_iso_day: /\d{2}/

_iso_hour: /\d{2}/

_iso_minutes: /\d{2}/

_iso_seconds: NUMBER
    
unit: "second" -> second
    | "minute" -> minute
    | "hour" -> hour
    | "day" -> day
    | "week" -> week
    | "month" -> month
    | "year" -> year

%import common.INT
%import common.NUMBER
%import common.WS
%import common.CNAME
